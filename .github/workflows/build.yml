name: Build Xiaomi Kernel (veux-r-oss, Clang)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      SUBARCH: arm64
      DEFCONFIG: defconfig
      KBUILD_BUILD_USER: github
      KBUILD_BUILD_HOST: runner

    steps:
    - name: Checkout This Repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev \
          libncurses5-dev libelf-dev ccache curl unzip \
          python3 python-is-python3 git make wget

    - name: Download Clang Toolchain (prebuilt Clang 17)
      run: |
        mkdir -p toolchains
        cd toolchains
        wget https://github.com/ClangBuiltLinux/tc-build/releases/download/20240101/clang+llvm-17.0.6-x86_64-linux-gnu.tar.xz
        tar -xf clang+llvm-17.0.6-x86_64-linux-gnu.tar.xz
        echo "CLANG_PATH=$PWD/clang+llvm-17.0.6-x86_64-linux-gnu" >> $GITHUB_ENV

    - name: Download GCC 12.1 Cross Compiler (aarch64)
      run: |
        cd toolchains
        wget https://releases.linaro.org/components/toolchain/binaries/12.1-2022.08/aarch64-linux-gnu/gcc-12.1.0-aarch64-linux-gnu.tar.xz
        tar -xf gcc-12.1.0-aarch64-linux-gnu.tar.xz
        echo "GCC64_PATH=$PWD/gcc-12.1.0-aarch64-linux-gnu" >> $GITHUB_ENV

    - name: Make Output Directory
      run: mkdir -p out

    - name: Setup defconfig
      run: |
        cd kernel
        PATH="$CLANG_PATH/bin:$PATH" \
        make O=../out ARCH=arm64 $DEFCONFIG

    - name: Build Kernel with Clang + GCC 12.1
      run: |
        cd kernel
        PATH="$CLANG_PATH/bin:$PATH" \
        make -j$(nproc) O=../out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=$GCC64_PATH/bin/aarch64-linux-gnu- \
          CLANG_TRIPLE=aarch64-linux-gnu-

    - name: Upload Image.gz-dtb
      uses: actions/upload-artifact@v4
      with:
        name: Image.gz-dtb
        path: out/arch/arm64/boot/Image.gz-dtb
