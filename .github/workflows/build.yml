name: Build Xiaomi Kernel (veux-r-oss)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      SUBARCH: arm64
      CROSS_COMPILE: aarch64-linux-android-
      KBUILD_BUILD_USER: "ci"
      KBUILD_BUILD_HOST: "github"
      DEFCONFIG: defconfig

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev make gcc clang python3 ccache libelf-dev build-essential git wget curl unzip

    - name: Download GCC Toolchain
      run: |
        mkdir -p toolchain
        cd toolchain
        wget https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        tar -xf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        echo "PATH=$PWD/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin:$PATH" >> $GITHUB_ENV

    - name: Make Output Directory
      run: mkdir -p out

    - name: Kernel Defconfig
      run: |
        make O=out $DEFCONFIG

    - name: Compile Kernel
      run: |
        make -j$(nproc) O=out

    - name: Upload Kernel Image
      uses: actions/upload-artifact@v4
      with:
        name: Image.gz-dtb
        path: out/arch/arm64/boot/Image.gz-dtb
